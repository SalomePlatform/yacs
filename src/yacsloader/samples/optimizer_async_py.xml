<?xml version='1.0' encoding='iso-8859-1' ?>
<!--
  Copyright (C) 2006-2012  CEA/DEN, EDF R&D

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

  See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com

-->
<proc name="newSchema_1">
   <property name="DefaultStudyID" value="1"/>
   <type name="string" kind="string"/>
   <struct name="Engines/dataref">
      <member name="ref" type="string"/>
   </struct>
   <type name="bool" kind="bool"/>
   <sequence name="boolvec" content="bool"/>
   <type name="double" kind="double"/>
   <sequence name="dblevec" content="double"/>
   <objref name="file" id="file"/>
   <type name="int" kind="int"/>
   <sequence name="intvec" content="int"/>
   <objref name="pyobj" id="python:obj:1.0"/>
   <sequence name="stringvec" content="string"/>
   <container name="DefaultContainer">
      <property name="container_name" value="FactoryServer"/>
      <property name="name" value="localhost"/>
   </container>
   <optimizer name="OptimizerLoop0" nbranch="4" lib="algoasyncexample.py" entry="myalgoasync">
      <inline name="PyFunction0">
         <function name="myfunc">
            <code><![CDATA[def myfunc(inputValue):
    outputValue = int(inputValue*3+5)
    print "Received", inputValue, ", returning", outputValue
    return outputValue
]]></code>
         </function>
         <inport name="inputValue" type="double"/>
         <outport name="outputValue" type="int"/>
      </inline>
   </optimizer>
   <datalink control="false">
      <fromnode>OptimizerLoop0</fromnode> <fromport>evalSamples</fromport>
      <tonode>OptimizerLoop0.PyFunction0</tonode> <toport>inputValue</toport>
   </datalink>
   <datalink control="false">
      <fromnode>OptimizerLoop0.PyFunction0</fromnode> <fromport>outputValue</fromport>
      <tonode>OptimizerLoop0</tonode> <toport>evalResults</toport>
   </datalink>
   <parameter>
      <tonode>OptimizerLoop0</tonode><toport>nbBranches</toport>
      <value><int>4</int></value>
   </parameter>
   <presentation name="OptimizerLoop0" x="6" y="34" width="167" height="191" expanded="1" expx="6" expy="34" expWidth="167" expHeight="191" shownState="0"/>
   <presentation name="OptimizerLoop0.PyFunction0" x="5" y="124" width="158" height="63" expanded="1" expx="5" expy="124" expWidth="158" expHeight="63" shownState="0"/>
   <presentation name="__ROOT__" x="0" y="0" width="177" height="229" expanded="1" expx="0" expy="0" expWidth="177" expHeight="229" shownState="0"/>
</proc>
